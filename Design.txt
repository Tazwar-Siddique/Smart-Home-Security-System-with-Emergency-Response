// Code your design here
module Home_security_system (
    input clk, reset, activate, unauthorized_entry, 
    output reg alarm_output, call_output
);

    parameter Disarmed = 2'b00;
    parameter Armed = 2'b01;
    parameter Alarm = 2'b10;
    parameter EM_services = 2'b11;

    reg [1:0] current_state;
    reg [1:0] next_state;

    always @(negedge reset or posedge clk) begin
        if (reset) begin
            current_state <= Disarmed;
        end else begin
            current_state <= next_state;
        end
    end

    always @(activate or unauthorized_entry or current_state) begin
        case (current_state)
            Disarmed: begin
                if (activate) next_state <= Armed;
                else next_state <= current_state;
            end
            Armed: begin
              if (!activate) next_state <= Disarmed;
                else if (unauthorized_entry) next_state <= Alarm;
                else next_state <= current_state;
            end
            Alarm: begin
                if (!activate) next_state <= Disarmed;
                else if (activate && unauthorized_entry) next_state <= EM_services;
                else next_state <= current_state;
            end
            EM_services: begin
                if (!activate) next_state <= Disarmed;
                else next_state <= current_state;
            end
            default: next_state <= Disarmed;
        endcase
    end

    always @(current_state) begin
        case (current_state)
            Disarmed: begin
                alarm_output = 0;
                call_output = 0;
            end
            Armed: begin
                alarm_output = 0;
                call_output = 0;
            end
            Alarm: begin
                alarm_output = 1;
                call_output = 0;
            end
            EM_services: begin
                alarm_output = 1;
                call_output = 1;
            end
            default: begin
                alarm_output = 0;
                call_output = 0;
            end
        endcase
    end

endmodule
